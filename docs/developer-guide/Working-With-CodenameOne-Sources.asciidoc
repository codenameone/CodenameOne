== Working with Codename One Sources

=== Checking out the Sources

[source,bash]
----
$ mkdir workspace
$ cd workspace
$ git clone https://github.com/codenameone/CodenameOne
----

NOTE: Creating a clean "workspace" directory is optional, and there is nothing special about the name "workspace".  It is just recommended to create a clean directory into which you check out Codename One, because building Codename One will check out a few dependent projects and place then at the same level as the CodenameOne folder, so having a clean workspace will make it easier to manage.

=== Building Sources

The Maven aggregator for the SDK lives in the _maven_ directory. Run the following command to build every module and install the artifacts into your local Maven repository:

[source,bash]
----
$ cd CodenameOne/maven
$ mvn -DskipTests install
----

TIP: Omit the `-DskipTests` flag if you want the build to execute the full test suite as part of the build.

=== Running Unit Tests

Codename One's automated tests are expressed as standard Maven modules. You can run the core unit tests with:

[source,bash]
----
$ cd CodenameOne/maven
$ mvn -pl core-unittests test
----

The integration tests that drive the simulator and build client live under the `tests` directory. From the same _maven_ directory you can run them with:

[source,bash]
----
$ mvn -pl tests -am verify
----

Consult the module READMEs inside `maven/core-unittests` and `maven/tests` for additional configuration options and environment variables.

=== Running iOS Unit Tests

Codename One's Appium-based iOS simulator tests require macOS, Xcode, and an Enterprise subscription. If you have access to that infrastructure, coordinate with Codename One support for credentials and provisioning, then follow the instructions in the `maven/tests` module to execute the suite with Maven. The legacy Ant targets documented in older guides are no longer part of the supported workflow.
